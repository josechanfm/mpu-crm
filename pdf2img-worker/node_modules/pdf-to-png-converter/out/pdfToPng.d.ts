import { PdfToPngOptions, PngPageOutput } from './types';
/**
 * Converts a PDF file to PNG images.
 *
 * @param {string | Buffer} pdfFile - The path to the PDF file or a buffer containing the PDF data.
 * @param {PdfToPngOptions} [props] - Optional properties to customize the conversion process.
 * @param {number[]} [props.pagesToProcess] - An array of page numbers to process.
 * @param {string} [props.outputFolder] - The folder where the output PNG files will be saved.
 * @param {number} [props.viewportScale] - The scale to apply to the page viewport.
 * @param {(pageNumber: number) => string} [props.outputFileMaskFunc] - A function to generate custom file names for the output PNG files.
 * @param {boolean} [props.strictPagesToProcess] - Whether to throw an error if invalid pages are requested.
 * @returns {Promise<PngPageOutput[]>} A promise that resolves to an array of PNG page outputs.
 *
 * @throws Will throw an error if invalid pages are requested when `strictPagesToProcess` is true.
 *
 * @example
 * ```typescript
 * const pngPages = await pdfToPng('/path/to/pdf/file.pdf', {
 *   pagesToProcess: [1, 2, 3],
 *   outputFolder: '/path/to/output/folder',
 *   viewportScale: 2.0,
 *   outputFileMaskFunc: (pageNumber) => `custom_name_page_${pageNumber}.png`,
 * });
 * ```
 */
export declare function pdfToPng(pdfFile: string | ArrayBufferLike, props?: PdfToPngOptions): Promise<PngPageOutput[]>;
