"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.propsToPdfDocInitParams = propsToPdfDocInitParams;
const const_1 = require("./const");
const verbosity_level_1 = require("./types/verbosity.level");
/**
 * Converts the given `PdfToPngOptions` object to a `pdfApiTypes.DocumentInitParameters` object.
 * @param props - The `PdfToPngOptions` object to convert.
 * @returns The resulting `pdfApiTypes.DocumentInitParameters` object.
 */
function propsToPdfDocInitParams(props) {
    const pdfDocInitParams = {
        ...const_1.DOCUMENT_INIT_PARAMS_DEFAULTS,
    };
    pdfDocInitParams.verbosity = props?.verbosityLevel !== undefined ? props?.verbosityLevel : verbosity_level_1.VerbosityLevel.ERRORS;
    pdfDocInitParams.disableFontFace =
        props?.disableFontFace !== undefined ? props.disableFontFace : const_1.PDF_TO_PNG_OPTIONS_DEFAULTS.disableFontFace;
    pdfDocInitParams.useSystemFonts =
        props?.useSystemFonts !== undefined ? props.useSystemFonts : const_1.PDF_TO_PNG_OPTIONS_DEFAULTS.useSystemFonts;
    pdfDocInitParams.enableXfa =
        props?.enableXfa !== undefined ? props.enableXfa : const_1.PDF_TO_PNG_OPTIONS_DEFAULTS.enableXfa;
    pdfDocInitParams.password =
        props?.pdfFilePassword !== undefined ? props?.pdfFilePassword : const_1.PDF_TO_PNG_OPTIONS_DEFAULTS.pdfFilePassword;
    return pdfDocInitParams;
}
